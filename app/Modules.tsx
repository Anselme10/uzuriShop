import { Ionicons } from "@expo/vector-icons";
import { useEffect, useRef, useState } from "react";
import {
  Animated,
  Linking,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";

const modules = [
  {
    id: "1",
    title: "Formation de Base",
    description:
      "Cils Classique\n\nPour qui ?\nId√©ale pour les d√©butantes souhaitant d√©couvrir et ma√Ætriser les fondamentaux.\n‚Ä¢ Contenu : Techniques de pose classique, conseils pratiques, et m√©thodologie.\n‚Ä¢ Mesures d'hygi√®ne et de s√©curit√© pour garantir un service de qualit√© et prot√©ger vos clientes.\n‚Ä¢ Dur√©e : 1 journ√©e compl√®te.\n‚Ä¢ Kit de formation inclus.\n\nPrix: 290,000 FCFA",
    icon: "sparkles",
    features: [],
  },
  {
    id: "2",
    title: "Formation Compl√®te",
    description:
      "Techniques Basic + Avanc√©es\n\nPour qui ?\nLes d√©butantes qui souhaitent apprendre et ma√Ætriser toutes les techniques essentielles et avanc√©es d√®s le d√©part. Et Les professionnelles souhaitant √©largir leur palette technique et atteindre un niveau expert.\n\nContenu :\n‚Ä¢ Pose classique\n‚Ä¢ Volume russe\n‚Ä¢ Hybrid\n‚Ä¢ Wispy\n‚Ä¢ Wet Effect\n‚Ä¢ Manga Effect\n‚Ä¢ Autres techniques avanc√©es de volume\n‚Ä¢ Approfondissement sur la r√©tention pour fid√©liser vos clientes\n‚Ä¢ Les mesures essentielles d'hygi√®ne et de s√©curit√© adapt√©es √† votre activit√©\n\nDur√©e : 3 jours intensifs, m√™lant th√©orie et pratique.\n\nAvantages :\n‚Ä¢ Kit professionnel inclus\n‚Ä¢ Suivi personnalis√© pour vous accompagner apr√®s la formation\n‚Ä¢ Bonus exceptionnel : Coaching Business les erreurs fr√©quentes √† √©viter en d√©but de carri√®re. Comment b√¢tir une entreprise rentable et durable. Et attirer une client√®le high profil\n\nPrix: 490,000 FCFA",
    icon: "heart",
    features: [],
  },
  {
    id: "3",
    title: "TOP LASH MASTER",
    description:
      "Mentorat & Coaching Priv√©\n\nProfessionnel(le) des cils et tu ASPIRES √Ä PASSER AU NIVEAU SUP√âRIEUR en devenant formateur/trice ? Ce programme est fait pour toi.\n\nAu Programme :\n‚Ä¢ Cr√©er et structurer une formation professionnelle.\nConcevoir un programme p√©dagogique clair, complet\n\n‚Ä¢ Ma√Ætriser l'art de l'enseignement\nApprendre √† transmettre vos comp√©tences avec aisance et √† captiver votre audience.\n\n‚Ä¢ Adopter une p√©dagogie adapt√©e et inclusive\nIdentifier les besoins sp√©cifiques de vos √©l√®ves, √† adapter vos m√©thodes\n\n‚Ä¢ D√©velopper ton image de marque.\nConstruire une image de marque professionnelle, attirer des clients haut de gamme et se positionner en leader\n\n‚Ä¢ Lancer et g√©rer une activit√© de formation rentable.\nTransformer tes connaissances en une source de revenus durables.\n\nBonus : Comment Construire un R√©seau Professionel Puissant\n\nPrix: 1,000,000 FCFA",
    icon: "body",
    features: [],
  },
];

export default function Modules() {
  const fadeAnim = useRef(new Animated.Value(0)).current;
  const scaleRef1 = useRef(new Animated.Value(1)).current;
  const scaleRef2 = useRef(new Animated.Value(1)).current;
  const scaleRef3 = useRef(new Animated.Value(1)).current;
  const scaleValues = [scaleRef1, scaleRef2, scaleRef3];
  const [expandedModules, setExpandedModules] = useState<
    Record<string, boolean>
  >({});

  useEffect(() => {
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 1000,
      useNativeDriver: true,
    }).start();
  }, [fadeAnim]);

  const handlePressIn = (scaleValue: Animated.Value) => {
    Animated.spring(scaleValue, {
      toValue: 0.95,
      useNativeDriver: true,
    }).start();
  };

  const handlePressOut = (scaleValue: Animated.Value) => {
    Animated.spring(scaleValue, {
      toValue: 1,
      friction: 3,
      tension: 40,
      useNativeDriver: true,
    }).start();
  };

  const toggleExpand = (moduleId: string) => {
    setExpandedModules((prev) => ({
      ...prev,
      [moduleId]: !prev[moduleId],
    }));
  };

  const selectModule = (module: (typeof modules)[0]) => {
    const phoneNumber = "12033900003";
    const message = `Bonjour Uzuri! üéÄ\n\nJe suis int√©ress√© par le ${module.title}.\n\n${module.description}\n\nPouvez-vous m'en dire plus?`;

    Linking.openURL(
      `whatsapp://send?phone=${phoneNumber}&text=${encodeURIComponent(message)}`
    ).catch(() => alert("WhatsApp n'est pas install√©"));
  };

  const renderDescription = (module: (typeof modules)[0]) => {
    const isExpanded = expandedModules[module.id];
    const maxLines = 5; // Number of lines to show before truncating

    if (isExpanded) {
      return (
        <View>
          <Text style={styles.cardDescription}>{module.description}</Text>
          <TouchableOpacity onPress={() => toggleExpand(module.id)}>
            <Text style={styles.seeMoreText}>Voir moins</Text>
          </TouchableOpacity>
        </View>
      );
    }

    return (
      <View>
        <Text
          style={styles.cardDescription}
          numberOfLines={maxLines}
          ellipsizeMode="tail"
        >
          {module.description}
        </Text>
        <TouchableOpacity onPress={() => toggleExpand(module.id)}>
          <Text style={styles.seeMoreText}>Voir plus</Text>
        </TouchableOpacity>
      </View>
    );
  };

  return (
    <ScrollView>
      <Animated.View style={[styles.container, { opacity: fadeAnim }]}>
        <Text style={styles.header}>Choisissez Votre Exp√©rience</Text>
        <Text style={styles.subheader}>
          S√©lectionnez le module qui correspond √† vos besoins
        </Text>

        <View style={styles.modulesContainer}>
          {modules.map((module, index) => (
            <Animated.View
              key={module.id}
              style={[
                styles.card,
                {
                  transform: [{ scale: scaleValues[index] }],
                  borderColor: "#F12498",
                },
              ]}
            >
              <TouchableOpacity
                activeOpacity={0.9}
                onPressIn={() => handlePressIn(scaleValues[index])}
                onPressOut={() => handlePressOut(scaleValues[index])}
                onPress={() => selectModule(module)}
              >
                <View style={styles.cardHeader}>
                  <View
                    style={[
                      styles.iconContainer,
                      { backgroundColor: "rgba(241, 36, 152, 0.1)" },
                    ]}
                  >
                    <Ionicons
                      name={module.icon as any}
                      size={28}
                      color="#F12498"
                    />
                  </View>
                  <Text style={styles.cardTitle}>{module.title}</Text>
                </View>

                {renderDescription(module)}

                <View style={styles.selectButton}>
                  <Text style={styles.selectButtonText}>Choisir ce module</Text>
                  <Ionicons name="arrow-forward" size={18} color="white" />
                </View>
              </TouchableOpacity>
            </Animated.View>
          ))}
        </View>
      </Animated.View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fff",
    padding: 20,
    paddingTop: 40,
  },
  header: {
    fontSize: 28,
    fontWeight: "800",
    color: "#000",
    marginBottom: 8,
    textAlign: "center",
  },
  subheader: {
    fontSize: 16,
    color: "#666",
    marginBottom: 30,
    textAlign: "center",
  },
  modulesContainer: {
    marginTop: 20,
  },
  card: {
    backgroundColor: "#fff",
    borderRadius: 20,
    padding: 20,
    marginBottom: 20,
    borderWidth: 1,
    shadowColor: "#F12498",
    shadowOffset: { width: 0, height: 10 },
    shadowOpacity: 0.1,
    shadowRadius: 20,
    elevation: 5,
  },
  cardHeader: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 15,
  },
  iconContainer: {
    width: 50,
    height: 50,
    borderRadius: 12,
    justifyContent: "center",
    alignItems: "center",
    marginRight: 15,
  },
  cardTitle: {
    fontSize: 20,
    fontWeight: "700",
    color: "#000",
  },
  cardDescription: {
    fontSize: 14,
    color: "#666",
    marginBottom: 10,
    lineHeight: 22,
  },
  seeMoreText: {
    color: "#F12498",
    fontWeight: "600",
    marginBottom: 15,
    textAlign: "right",
  },
  selectButton: {
    backgroundColor: "#F12498",
    padding: 15,
    borderRadius: 12,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center",
    marginTop: 10,
  },
  selectButtonText: {
    color: "white",
    fontWeight: "600",
    marginRight: 10,
  },
});
